#!/usr/bin/env ruby

UNARCHIVABLE_BRANCHES = ["devel", "master", "pre_prod", "recurrence"]

def all_branches_and_current_branch
    result = []
    current_branch = nil

    `git branch`.each_line do |branch;sanitized_branch|
        sanitized_branch = branch.gsub /[\s\*]/, ""
        result << sanitized_branch
        current_branch = sanitized_branch if branch[0] == "*"
    end

    return result, current_branch
end

all_branches, current_branch = all_branches_and_current_branch

UNARCHIVABLE_BRANCHES << current_branch

branch_arg = ARGV[0]

def archive_branch(branch_to_archive, all_branches)
    if all_branches.include?branch_to_archive and not UNARCHIVABLE_BRANCHES.include? branch_to_archive
        `git tag`.each_line do |tag;sanitized_tag|
            sanitized_tag = tag.gsub /[\s\\n\*]/, ""
            if "archive/#{branch_to_archive}".eql? sanitized_tag
                puts "Branch could not be archived. A branch with the same name already exists in the archive."
                return
            end
        end

        `git tag archive/#{branch_to_archive} #{branch_to_archive}`
        `git branch -D #{branch_to_archive}`
        puts "Branch #{branch_to_archive} Successfully Archived!"
    end
end

if branch_arg.eql? "all!"
    all_branches.each do |branch|    
        archive_branch branch, all_branches
    end
else
    archive_branch branch_arg, all_branches
end
